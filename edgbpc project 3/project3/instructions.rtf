{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red34\green45\blue53;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c50196;\cssrgb\c17647\c23137\c27059;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs42 \cf2 \expnd0\expndtw0\kerning0
Project 3:\'a0More UIKit Elements and Delegation\cf3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 You will create your own Xcode project for this assignment and then follow the instructions for submission when you're ready to upload it.\
\pard\pardeftab720\partightenfactor0

\fs42 \cf2 Requirements\cf3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 Create a\'a0form that an app would use to "sign up" a new user. The interface can look however you would like (it doesn't have to be pretty--we'll work on pretty later), but the project must\'a0meet the following requirements.\
1) The user interface should have 
\b UITextFields
\b0  for name,\'a0username, password, email address, and phone number. The 
\b keyboard should properly resign when pressing Done/Return
\b0 \'a0for each text field. There should\'a0
\b UILabels
\b0  for the "title" of each text field, so the user knows what kind of information to type in. There should be 
\b placeholder text
\b0  in each text field (except for password). 
\b Secure text entry
\b0  must be used on the password text field, and 
\b a\'a0suitable type of keyboard
\b0  should be used for each of the\'a0text fields respectively.\
2) An 
\b image view with an image
\b0  (stored in Assets.xcassets) must be present on the screen. Think of it like an app logo or icon or really whatever you want/can find.\'a0\
3) There should be an 
\b "Add" button
\b0  at the bottom of the form which will create the user in your Model and then 
\b clear all the text fields
\b0 . It should only be enabled when the input passes validation.\'a0\
4) You can add whatever input validation you would like for the text fields. The 
\b only REQUIRED input validation
\b0  is: i) that the password be at least 7 characters long, ii) that the phone number\'a0does not contain any non-numeric characters, and iii) that the rest of the fields have at least 3\'a0characters. (You do not have to validate that it is a correct email address or phone number, though you can if you like).\
5) Research 
\b UITextView,
\b0  a new component that we have not gone over in class, and place\'a0one in the bottom of the third of your screen. 
\i Disable editing on it.
\i0 \'a0The text view should have\'a0a description of each user in the app on a separate line. (So for example when I press the "Add" button, a new user is added to the text view on a new line.) The description should have all the fields of the user in it (don't put real passwords in it!).\
\pard\pardeftab720\partightenfactor0

\fs42 \cf2 MVC\cf3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 You need to use the Model-View-Controller pattern for this assignment. Put DOMAIN logic in your Model, and PRESENTATION and COORDINATION logic (enabling buttons, clearing text fields) in your View Controller.\
Specific notes on this:\
- Put your input\'a0validation logic in the model.\'a0For example, you might make\'a0methods like: `isValidPassword(text: String) -> Bool`.\
- When using\'a0delegation with\'a0UIKit components, make your View Controller the delegate.\'a0\
\pard\pardeftab720\partightenfactor0

\fs42 \cf2 Extra Credit\cf3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 Up to 5 points of extra credit are available for getting creative with the project and adding additional features or capabilities. 
\b Describe any additions in the COMMENTS on your submission in Canvas
\b0 .\
Using Autolayout or adding in better input validation are examples of the kind of thing you could\'a0do. You could also make it to where hitting Enter/Return on the keyboard immediately brings focus to the next text field. Or you can think of something else cool or fun to do.\
If you add extra stuff, just make sure you still meet all the requirements. And get the base project done first and save it separately 
\i before
\i0  starting on anything extra!\
\pard\pardeftab720\partightenfactor0

\fs42 \cf2 Notes for Layout (same as last time)\cf3 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 1. 
\b No Autolayout
\b0 : Just design for the 
\b iPhone 7 in portrait mode.
\b0  So, use the 
\b iPhone 7
\b0  
\b Simulator
\b0  when testing, and in Interface Builder, select 
\b "View as iPhone 7" 
\b0 for your storyboarding.\
\'a0\
\pard\pardeftab720\partightenfactor0

\fs42 \cf2 Instructions for Submission (same as last time)\cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs28 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
As with all projects, your project should run on Xcode 8.2 and be free of compile-time errors and crashes (run-time errors). Those will have significant deductions.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
You should also not have any compile-time warnings (in yellow).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
When you're ready to submit, rename the folder containing the Xcode project \'a0to\'a0your UMSL user id (e.g. 'erc9q7'). Then right click on that folder and select the option that should say "Compress erc9q7" (or whatever your user id is). Finally upload that zip file here.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Make sure you give yourself enough time to actually make the submission before the deadline.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
It's always better to submit something than nothing!}